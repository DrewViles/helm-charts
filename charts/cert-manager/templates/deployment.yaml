---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cainjector
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/name: cainjector
  {{- include "cert-manager.labels" . | nindent 4 }}
  annotations:
  {{- include "cert-manager.annotations" . | nindent 4 }}
  name: cert-manager-cainjector
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: {{ .Chart.Name }}
      app.kubernetes.io/name: cainjector
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: {{ .Chart.Name }}
        app.kubernetes.io/name: cainjector
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - args:
            - --v=2
            - --leader-election-namespace=kube-system
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "{{.Values.image.repo}}/cert-manager-cainjector:v{{.Values.image.tag}}"
          imagePullPolicy: {{.Values.imagePullPolicy}}
          name: cert-manager
          resources: {}
      serviceAccountName: cert-manager-cainjector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/name: cert-manager
  {{- include "cert-manager.labels" . | nindent 4 }}
  annotations:
  {{- include "cert-manager.annotations" . | nindent 4 }}
  name: cert-manager
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: {{ .Chart.Name }}
      app.kubernetes.io/name: cert-manager
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9402"
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Chart.Name }}
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: {{ .Chart.Name }}
        app.kubernetes.io/name: cert-manager
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=kube-system
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "{{.Values.image.repo}}/cert-manager-controller:v{{.Values.image.tag}}"
          imagePullPolicy: {{.Values.imagePullPolicy}}
          name: cert-manager
          ports:
            - containerPort: 9402
              protocol: TCP
          resources: {}
      serviceAccountName: cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/name: webhook
  {{- include "cert-manager.labels" . | nindent 4 }}
  annotations:
  {{- include "cert-manager.annotations" . | nindent 4 }}
  name: cert-manager-webhook
  namespace: cert-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: {{ .Chart.Name }}
      app.kubernetes.io/name: webhook
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: {{ .Chart.Name }}
        app.kubernetes.io/name: webhook
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - args:
            - --v=2
            - --secure-port=10250
            - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
            - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
            - --dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: "{{.Values.image.repo}}/cert-manager-webhook:v{{.Values.image.tag}}"
          imagePullPolicy: {{.Values.imagePullPolicy}}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager
          ports:
            - containerPort: 10250
              name: https
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
      serviceAccountName: cert-manager-webhook